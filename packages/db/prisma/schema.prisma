// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @unique @default(cuid())
  username     String      @unique
  password     String
  avatarId     String?
  role         Role
  spaces       Space[]
  avatar       Avatar?     @relation(fields: [avatarId], references: [id])
  joinedSpaces UserSpace[]
}

model Space {
  id          String      @id @unique @default(cuid())
  name        String
  createdAt   DateTime    @default(now())
  mapId       String
  creatorId   String
  creator     User        @relation(fields: [creatorId], references: [id])
  map         Map         @relation(fields: [mapId], references: [id])
  joinedUsers UserSpace[]
}

model UserSpace {
  id       String    @id @unique @default(cuid())
  userId   String
  spaceId  String
  joinedAt DateTime  @default(now())
  leftAt   DateTime?
  user     User      @relation(fields: [userId], references: [id])
  space    Space     @relation(fields: [spaceId], references: [id])

  @@unique([userId, spaceId])
}

model Map {
  id          String   @id @unique @default(cuid())
  width       Int
  height      Int
  name        String
  description String
  imageUrl    String
  walls       String[]
  spaces      Space[]
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageUrl String?
  name     String?
  users    User[]
}

enum Role {
  Admin
  User
}
